<?php

/**
 * @file
 * OAuth2.0 Consumer Support install and uninstall code.
 */



/**
 * Implements hook_schema().
 */
function oauth2_consumer_schema() {
  $schema = array();

  $schema['oauth2_consumer']  = array(
      'description' => t('Stores information about OAuth2.0 consumers.'),
      'export' => array(
          'key' => 'server_id',
          'key name' => 'OAuth2.0 Consumer Server Machine Name',
          'identifier' => 'preset', // Exports will be defined as $preset
          'default hook' => 'default_oauth2_consumer_preset',  // Function hook name.
          'api' => array(
              'owner' => 'oauth2_server',
              'api' => 'default_oauth2_consumer_presets',  // Base name for api include files.
              'minimum_version' => 1,
              'current_version' => 1,
          ),
      ),
      'fields' => array(
          'server_id' => array(
              'description' => 'The server machine name.',
              'type' => 'varchar',
              'length' => 64,
              'not null' => TRUE,
          ),
          'expires_in' => array(
              'description' => 'How long will OAuth2.0 cache query result within local cache. With a long cache lifetime can greatly reduce the loading of remote OAuth2.0 authorization server; by the way with a short cache lifetime can ensure the synchronize of access_token. To disable cache functionality, simply set this as 0.',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
          ),
          'data' => array(
              'type' => 'text',
              'not null' => FALSE,
              'size' => 'big',
              'description' => 'A serialized array of name value pairs that are related to the consumer username and password.',
          ),
      ),
      'primary key' => array('server_id'),
  );

  return $schema;
}
